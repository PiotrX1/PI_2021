@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Authorization

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject IAuthorizationService AuthorizationService

<ul class="navbar-nav ml-auto">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a id="manage" class="nav-link text-dark" asp-controller="Account" asp-action="Index" title="Konto">Zalogowany jako @UserManager.GetUserName(User)</a>
        </li>

        <li class="nav-item">
            <a id="manage" class="nav-link text-dark" asp-controller="Home" asp-action="Add" title="Dodaj">Dodaj zaginionych</a>
        </li>

        if ((await AuthorizationService.AuthorizeAsync(User, "Admin")).Succeeded)
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-controller="Admin" asp-action="Index" title="Panel administracyjny">Panel administracyjny</a>
            </li>
        }


        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Account" asp-action="Logout" title="Wyloguj">Wyloguj</a>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" id="login" asp-controller="Account" asp-action="Login">Logowanie</a>
        </li>
    }
</ul>
